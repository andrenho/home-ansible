---

- name: Create volume mountpoint
  file: 
    path: "{{ volume_mount_point }}"
    state: directory
    recurse: yes
    owner: data
    group: data

- name: Mount volume device
  mount:
    path: "{{ volume_mount_point }}"
    src: "UUID={{ volume_uuid }}"
    fstype: ntfs
    opts: "defaults"
    state: mounted
  when: volume_uuid is defined

- name: Verify if directory `data` exists
  stat:
    path: "{{ data_dir }}"
  register: data

- name: Restore backup from file
  copy:
    src: "{{ restore_file_path }}"
    dest: /tmp/backup
  when: restore_from == 'file' and not data.stat.exists

- name: Restore backup from S3
  amazon.aws.aws_s3:
    bucket: "{{ restore_s3_bucket }}"
    object: "{{ restore_s3_object }}"
    dest: /tmp/backup
    mode: get
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_access_key }}"
    ignore_nonexistent_bucket: true
  when: restore_from == 's3' and not data.stat.exists

- name: Create data directory
  file:
    path: "{{ data_dir }}"
    state: directory
    recurse: yes
    owner: data
    group: data
    mode: '775'

- name: Uncompress backup
  unarchive:
    remote_src: true
    src: /tmp/backup
    dest: "{{ data_dir }}/"
    owner: data
    group: data
    mode: "u=rwX,g=rwX,o=rX"
  when: restore_from == 'file' or restore_from == 's3' and not data.stat.exists

- name: Remove backup file
  file:
    path: /tmp/backup
    state: absent
  when: restore_from == 'file' or restore_from == 's3' and not data.stat.exists
